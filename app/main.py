from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from fastapi.openapi.utils import get_openapi

from .models.database import engine, Base
from .routers import auth, artists, albums, promotions, ratings

# Create database tables
Base.metadata.create_all(bind=engine)

app = FastAPI(
    title="Records Store API",
    description="""
    üéµ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π API –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ –≤–∏–Ω–∏–ª–æ–≤—ã—Ö –ø–ª–∞—Å—Ç–∏–Ω–æ–∫.
    
    ## –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
    
    * üë§ **–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è** - –°–∏—Å—Ç–µ–º–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ JWT
    * üé® **–ê—Ä—Ç–∏—Å—Ç—ã** - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞—Ä—Ç–∏—Å—Ç–∞–º–∏ –∏ –∏—Ö –∫–∞—Ç–∞–ª–æ–≥–∞–º–∏
    * üíø **–ê–ª—å–±–æ–º—ã** - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–ª—å–±–æ–º–∞–º–∏ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π
    * üõí **–ó–∞–∫–∞–∑—ã** - –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫–∞–∑–æ–≤ –∫–ª–∏–µ–Ω—Ç–æ–≤
    * ‚≠ê **–†–µ–π—Ç–∏–Ω–≥–∏** - –°–∏—Å—Ç–µ–º–∞ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤ –∏ –æ—Ç–∑—ã–≤–æ–≤
    * üéÅ **–ê–∫—Ü–∏–∏** - –°–∫–∏–¥–∫–∏, –ø—Ä–æ–º–æ–∫–æ–¥—ã –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏
    
    ## –†–µ–π—Ç–∏–Ω–≥–∏ –∏ –æ—Ç–∑—ã–≤—ã
    
    ### –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã —Ä–µ–π—Ç–∏–Ω–≥–æ–≤:
    * –í–∑–≤–µ—à–µ–Ω–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥ —Å —É—á–µ—Ç–æ–º –º–Ω–æ–∂–µ—Å—Ç–≤–∞ —Ñ–∞–∫—Ç–æ—Ä–æ–≤
    * –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫
    * –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –æ—Ç–∑—ã–≤–æ–≤
    * –°–∏—Å—Ç–µ–º–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –∑–∞ –ø–æ–ª–µ–∑–Ω–æ—Å—Ç—å
    * –ó–∞—â–∏—Ç–∞ –æ—Ç –Ω–∞–∫—Ä—É—Ç–∫–∏
    
    ### –†–∞—Å—á–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥–∞
    –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–π—Ç–∏–Ω–≥ —É—á–∏—Ç—ã–≤–∞–µ—Ç:
    * –ë–∞–∑–æ–≤—É—é –æ—Ü–µ–Ω–∫—É (1-5 –∑–≤–µ–∑–¥)
    * –°—Ç–∞—Ç—É—Å –ø–æ–∫—É–ø–∞—Ç–µ–ª—è (verified purchase)
    * –ö–∞—á–µ—Å—Ç–≤–æ –æ—Ç–∑—ã–≤–∞ (–¥–ª–∏–Ω–∞, —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ)
    * –ì–æ–ª–æ—Å–∞ –∑–∞ –ø–æ–ª–µ–∑–Ω–æ—Å—Ç—å
    * –í–æ–∑—Ä–∞—Å—Ç –æ—Ç–∑—ã–≤–∞
    
    ## –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
    
    –í—Å–µ –∑–∞—â–∏—â–µ–Ω–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã —Ç—Ä–µ–±—É—é—Ç JWT —Ç–æ–∫–µ–Ω:
    1. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (`POST /api/auth/register`)
    2. –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω (`POST /api/auth/login`)
    3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–∫–µ–Ω –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ: `Authorization: Bearer <token>`
    
    ## –†–æ–ª–∏
    
    * **Admin** - –ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é
    * **User** - –î–æ—Å—Ç—É–ø –∫ –±–∞–∑–æ–≤–æ–º—É —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—É
    """,
    version="1.0.0",
    docs_url="/api/docs",
    redoc_url="/api/redoc",
    openapi_url="/api/openapi.json"
)

# CORS middleware
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

def custom_openapi():
    if app.openapi_schema:
        return app.openapi_schema
    
    openapi_schema = get_openapi(
        title="Records Store API",
        version="1.0.0",
        description=app.description,
        routes=app.routes,
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–≥–∏ —Å –æ–ø–∏—Å–∞–Ω–∏—è–º–∏
    openapi_schema["tags"] = [
        {
            "name": "auth",
            "description": "–û–ø–µ—Ä–∞—Ü–∏–∏ —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π",
            "externalDocs": {
                "description": "–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ–± –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏",
                "url": "/api/docs#section/Authentication",
            },
        },
        {
            "name": "artists",
            "description": "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞—Ä—Ç–∏—Å—Ç–∞–º–∏",
        },
        {
            "name": "albums",
            "description": "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–ª—å–±–æ–º–∞–º–∏",
        },
        {
            "name": "ratings",
            "description": """
            –°–∏—Å—Ç–µ–º–∞ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤ –∏ –æ—Ç–∑—ã–≤–æ–≤.
            
            ### –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
            * –°–æ–∑–¥–∞–Ω–∏–µ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤
            * –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ –ø–æ–ª–µ–∑–Ω–æ—Å—Ç—å
            * –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            * –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
            
            ### –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏
            * –ó–∞—â–∏—Ç–∞ –æ—Ç –Ω–∞–∫—Ä—É—Ç–∫–∏
            * –í–∑–≤–µ—à–µ–Ω–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥
            * –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–∫—É–ø–æ–∫
            """,
        },
        {
            "name": "promotions",
            "description": "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–∫—Ü–∏—è–º–∏ –∏ –ø—Ä–æ–≥—Ä–∞–º–º–æ–π –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏",
        }
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    openapi_schema["components"]["securitySchemes"] = {
        "bearerAuth": {
            "type": "http",
            "scheme": "bearer",
            "bearerFormat": "JWT",
            "description": "JWT —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞. –ü–æ–ª—É—á–∏—Ç–µ —á–µ—Ä–µ–∑ POST /api/auth/login",
        }
    }
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–º–µ—Ä—ã
    openapi_schema["components"]["examples"] = {
        "RatingCreate": {
            "summary": "–ü—Ä–∏–º–µ—Ä —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–π—Ç–∏–Ω–≥–∞",
            "value": {
                "score": 5,
                "review_text": "–û—Ç–ª–∏—á–Ω—ã–π –∞–ª—å–±–æ–º! –ö–∞—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–∏ –ø—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ–µ."
            }
        },
        "RatingResponse": {
            "summary": "–ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞ —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º",
            "value": {
                "id": 1,
                "score": 5,
                "review_text": "–û—Ç–ª–∏—á–Ω—ã–π –∞–ª—å–±–æ–º! –ö–∞—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–∏ –ø—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ–µ.",
                "user_id": 1,
                "album_id": 1,
                "is_verified_purchase": True,
                "helpful_votes": 10,
                "unhelpful_votes": 1,
                "created_at": "2025-05-05T10:00:00"
            }
        }
    }
    
    app.openapi_schema = openapi_schema
    return app.openapi_schema

app.openapi = custom_openapi

# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã
app.include_router(
    auth.router,
    prefix="/api/auth",
    tags=["auth"],
    responses={
        401: {"description": "–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"},
        403: {"description": "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤"}
    }
)

app.include_router(
    artists.router,
    prefix="/api",
    tags=["artists"],
    responses={
        401: {"description": "–¢—Ä–µ–±—É–µ—Ç—Å—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è"},
        403: {"description": "–¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"},
        404: {"description": "–ê—Ä—Ç–∏—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"}
    }
)

app.include_router(
    albums.router,
    prefix="/api",
    tags=["albums"],
    responses={
        401: {"description": "–¢—Ä–µ–±—É–µ—Ç—Å—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è"},
        403: {"description": "–¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"},
        404: {"description": "–ê–ª—å–±–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω"}
    }
)

app.include_router(
    ratings.router,
    prefix="/api",
    tags=["ratings"],
    responses={
        401: {"description": "–¢—Ä–µ–±—É–µ—Ç—Å—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è"},
        403: {"description": "–ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏"},
        404: {"description": "–†–µ—Å—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω"},
        422: {"description": "–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö"}
    }
)

app.include_router(
    promotions.router,
    prefix="/api",
    tags=["promotions"],
    responses={
        401: {"description": "–¢—Ä–µ–±—É–µ—Ç—Å—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è"},
        403: {"description": "–¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"},
        404: {"description": "–†–µ—Å—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω"},
        400: {"description": "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å"}
    }
)

@app.get("/", tags=["root"])
async def root():
    """
    –ö–æ—Ä–Ω–µ–≤–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç API.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–∏—Å–µ.
    """
    return {
        "name": "Records Store API",
        "version": "1.0.0",
        "docs": "/api/docs",
        "redoc": "/api/redoc"
    }
